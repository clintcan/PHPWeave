# Docker Compose for PHPWeave with Environment Variables
# Kubernetes-style deployment using environment variables instead of .env file
# This approach is recommended for production deployments
#
# USAGE:
# 1. Hardcoded values (default MySQL, as shown below):
#    docker compose -f docker-compose.env.yml up -d
#
# 2. Using host environment variables with defaults:
#    Export variables on host, then run:
#    export DB_PASSWORD=my_secure_password
#    docker compose -f docker-compose.env.yml up -d
#
# 3. Using PostgreSQL instead of MySQL:
#    export DB_DRIVER=pdo_pgsql
#    export DB_PORT=5432
#    docker compose -f docker-compose.env.yml up -d
#    (Then change the 'db' service below to use postgres:15 image)
#
# 4. Using SQLite (no database service needed):
#    export DB_DRIVER=pdo_sqlite
#    export DB_NAME=/var/www/html/storage/database.sqlite
#    docker compose -f docker-compose.env.yml up -d
#    (Then comment out the 'db' service and 'depends_on' below)
#
# The ${VAR:-default} syntax means: use host's $VAR if set, otherwise use "default"
#
# SUPPORTED DRIVERS:
# - pdo_mysql (default) - MySQL/MariaDB (port 3306)
# - pdo_pgsql - PostgreSQL (port 5432)
# - pdo_sqlite - SQLite (no port needed)
# - pdo_sqlsrv - SQL Server (port 1433)
# - pdo_dblib - SQL Server via FreeTDS (port 1433)
# - pdo_odbc - ODBC connections (requires DB_DSN)

services:
  # PHP Application with Apache
  phpweave:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: phpweave-app-env
    ports:
      - "8080:80"
    environment:
      # Docker environment detection
      - DOCKER_ENV=${DOCKER_ENV:-production}
      - PHPWEAVE_ENV=${PHPWEAVE_ENV:-production}

      # Database configuration (using DB_* naming convention)
      # These can be overridden by setting host environment variables
      - DB_HOST=${DB_HOST:-db}
      - DB_NAME=${DB_NAME:-phpweave}
      - DB_USER=${DB_USER:-phpweave_user}
      - DB_PASSWORD=${DB_PASSWORD:-phpweave_pass}
      - DB_CHARSET=${DB_CHARSET:-utf8mb4}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DRIVER=${DB_DRIVER:-pdo_mysql}
      - DB_DSN=${DB_DSN:-}

      # Application settings
      - DEBUG=${DEBUG:-0}
    restart: unless-stopped
    networks:
      - phpweave-network
    depends_on:
      - db

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: phpweave-db-env
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: phpweave
      MYSQL_USER: phpweave_user
      MYSQL_PASSWORD: phpweave_pass
    volumes:
      - db-data-env:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      - phpweave-network

# Optional: phpMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpweave-phpmyadmin-env
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: phpweave_user
      PMA_PASSWORD: phpweave_pass
    ports:
      - "8081:80"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - phpweave-network

volumes:
  db-data-env:
    driver: local

networks:
  phpweave-network:
    driver: bridge
